#!/usr/bin/env node

const express = require("express");
const request = require("request");
const cors = require('cors');

const serverCount = 2;
const servers = [...Array(serverCount).keys()].map(
  (i) => `https://feedr-app-${i + 1}.herokuapp.com`
);
let cur = 0;

const profilerMiddleware = (req, res, next) => {
  const start = Date.now();
  // The 'finish' event comes from core Node.js, it means Node is done handing
  // off the response headers and body to the underlying OS.
  res.on("finish", () => {
    console.log("Completed", req.method, req.url, Date.now() - start);
  });
  next();
};

const handler = (req, res) => {
  // Add an error handler for the proxied request
  const _req = request({ url: servers[cur] + req.url }).on("error", (error) => {
    res.status(500).send(error.message);
  });
  req.pipe(_req).pipe(res);
  cur = (cur + 1) % servers.length;
};
const server = express()
  .use(profilerMiddleware)
  .use(cors())
  .get("*", handler)
  .post("*", handler);

const listener = server.listen(process.env.PORT || 1234, () => {
  console.log(`Started load balancer on port ${listener.address().port}!`);
  console.log("Load-balancing to the following servers:", servers);
});
